@page
@model CPL20Archive.Pages.Sessions._2011.IndexModel
@{
}
    <div class="top-title-area bg-img-charcoal-eticket">
      <div class="container">
        <h1 class="title-page">Session Details</h1>
      </div>
    </div>
    <div class="gap"></div>
    <div class="container">
      <div class="row">
        <div class="span3">
          <aside class="sidebar-left">
            <br />
            <h5 class="SessionDetails">Topic(s)</h5>
           <a asp-page="/Sessions/Topic_AppDev">Application Development</a><br />
            <br />
          </aside>
        </div>
        <div class="span9">
          <h2 id="MainContent_MainContent_SessionTitle" class="SessionDetails">But It was Logged!  Practical Logging & Monitoring with .NET Core</h2>
          <h5 id="MainContent_MainContent_SessionType" class="SessionDetails">Regular Session</h5>
          <br />
         <iframe width="560" height="315" src="https://www.youtube.com/embed/oHszbc6tt-M" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
          .NET Core makes writing log entries a breeze within your applications, however, that is where the out-of-the-box simplicity ends.  So you have decorated your code with all of these pretty log messages that are designed to make your life easier, but then what?  Have you actually reviewed them?  Something bad happened, did it tell you?  What about confidential information, have you limited that from being logged?

Well, this session is designed to help take your logging from ***IMPLEMENTED*** to ***USABLE***.  Logging is great, but we have so many questions to answer, including where you store the logs, how you get notifications etc.  In this code-focused solution, we explore the following concepts, with detailed examples.

* Where to log entries to, and flexible configurations
* Monitoring and escalation of log entries
* Integration with logging & external assemblies
* Configuration & build systems with logging

At the end of the session, attendees should be able to work with logging and exception handling in .NET Core effectively. 
          <hr />
          <div class="row row-wrap">
            <div class="span3">
              <div class="thumb center">
                <div class="thumb-header">
                  <a class="hover-img" href="http://codepalousa.com/SpeakerDetails/DA1726C1-9F5E-43C1-8185-1B507C51D6A4">
                    <img src="https://greeneventstechnology.azureedge.net/cpl20/speakers/Mitchel_Sellers.png" alt="Mitchel Sellers" title="Mitchel Sellers" />
                  </a>
                </div>
                <div class="thumb-caption">
                  <h5 class="thumb-title"><a href="http://codepalousa.com/SpeakerDetails/DA1726C1-9F5E-43C1-8185-1B507C51D6A4">Mitchel Sellers</a></h5>
                  <p class="thumb-meta"><br /></p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="gap"></div>
    </div>
