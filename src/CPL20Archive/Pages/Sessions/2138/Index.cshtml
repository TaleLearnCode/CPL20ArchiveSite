@page
@model CPL20Archive.Pages.Sessions._2138.IndexModel
@{
}
    <div class="top-title-area bg-img-charcoal-eticket">
      <div class="container">
        <h1 class="title-page">Session Details</h1>
      </div>
    </div>
    <div class="gap"></div>
    <div class="container">
      <div class="row">
        <div class="span3">
          <aside class="sidebar-left">
            <br />
            <h5 class="SessionDetails">Topic(s)</h5>
           <a asp-page="/Sessions/Topic_AppDev">Application Development</a><br />
            <br />
          </aside>
        </div>
        <div class="span9">
          <h2 id="MainContent_MainContent_SessionTitle" class="SessionDetails">Learning Functional Programming Through Construction: First Principles</h2>
          <h5 id="MainContent_MainContent_SessionType" class="SessionDetails">Regular Session</h5>
          <br />
         <iframe width="560" height="315" src="https://www.youtube.com/embed/YDrr8gu-oNk" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
          In the past five years, functional programming has increased dramatically in popularity which has lead to an explosion of resources in learning these concepts. But, between languages (Haskell, Elm, PureScript, F#), libraries (Ramda, fp-ts), and concepts (Monads, Monoids, Functors), it can be overwhelming in determining where to start and how to begin.

In this talk, I'm going to show you three fundamental concepts of functional programming: pure functions, immutability, and composition by not only explanation but we will walk through building these concepts into your code and applications. As we explore each concept, I'll show you the advantages of following these principles, how they will improve your development experience, and how they will set the stage for more advanced ideas.

Intended for those who have experience with TypeScript or C#, by the end of this presentation, you will understand how pure functions lead to easier to test code, how immutability makes debugging easier, and how the power of compositions allows us to build bigger applications by combining smaller applications.
          <hr />
          <div class="row row-wrap">
            <div class="span3">
              <div class="thumb center">
                <div class="thumb-header">
                  <a class="hover-img" href="http://codepalousa.com/SpeakerDetails/6e0276de-468b-497e-8b74-4e0181f483be">
                    <img src="https://greeneventstechnology.azureedge.net/cpl20/speakers/Cameron_Presley.png" alt="Cameron Presley" title="Cameron Presley" />
                  </a>
                </div>
                <div class="thumb-caption">
                  <h5 class="thumb-title"><a href="http://codepalousa.com/SpeakerDetails/6e0276de-468b-497e-8b74-4e0181f483be">Cameron Presley</a></h5>
                  <p class="thumb-meta"><br /></p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="gap"></div>
    </div>
